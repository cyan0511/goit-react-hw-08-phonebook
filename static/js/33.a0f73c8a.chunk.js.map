{"version":3,"file":"static/js/33.a0f73c8a.chunk.js","mappings":"qNACA,GAAgB,kBAAkB,mCAAmC,MAAQ,0B,wCCG7E,GAAeA,EAAAA,EAAAA,IAA4BC,EAAAA,EAAAA,KAAK,OAAQ,CACtDC,EAAG,oPACD,iB,SCCSC,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IAoB1B,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,mBAAuBC,SAAA,EACrCX,EAAAA,EAAAA,KAACY,EAAa,CAACC,GAAI,CAAEC,SAAU,YAC/BN,EAAAA,EAAAA,MAAA,QAAMC,UAAWC,EAAAA,KAAUK,SArBV,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfhB,GACEiB,EAAAA,EAAAA,IAAM,CACJC,MAAOH,EAAKI,SAASD,MAAME,MAC3BC,SAAUN,EAAKI,SAASE,SAASD,SAGrCL,EAAKO,OACP,EAWuDC,aAAa,MAAKf,SAAA,EACnEX,EAAAA,EAAAA,KAAC2B,EAAAA,EAAS,CACRC,MAAM,QACNC,QAAQ,WACRC,KAAK,QACLC,KAAK,WACP/B,EAAAA,EAAAA,KAAC2B,EAAAA,EAAS,CACRC,MAAM,WACNC,QAAQ,WACRC,KAAK,WACLC,KAAK,aAEN1B,GAAQL,EAAAA,EAAAA,KAAA,QAAMS,UAAWC,EAAAA,MAAUC,SAAC,kBAAuB,MAE5DX,EAAAA,EAAAA,KAACgC,EAAAA,EAAM,CAACF,KAAK,SAASD,QAAQ,WAAUlB,SAAC,gBAIjD,EClCA,EAbkB,WAChB,OACEH,EAAAA,EAAAA,MAACyB,EAAAA,GAAc,CAAAtB,SAAA,EACbX,EAAAA,EAAAA,KAACkC,EAAAA,GAAM,CAAAvB,UACLX,EAAAA,EAAAA,KAAA,SAAAW,SAAO,aAETX,EAAAA,EAAAA,KAAA,OAAKS,UAAU,iBAAgBE,UAC7BX,EAAAA,EAAAA,KAACE,EAAS,QAIlB,C","sources":["webpack://react-homework-template/./src/components/LoginForm/LoginForm.module.css?4ac5","../node_modules/@mui/icons-material/esm/AccountCircle.js","components/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"login-container\":\"LoginForm_login-container__iMGc2\",\"error\":\"LoginForm_error__012y+\"};","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2m0 4c1.93 0 3.5 1.57 3.5 3.5S13.93 13 12 13s-3.5-1.57-3.5-3.5S10.07 6 12 6m0 14c-2.03 0-4.43-.82-6.14-2.88C7.55 15.8 9.68 15 12 15s4.45.8 6.14 2.12C16.43 19.18 14.03 20 12 20\"\n}), 'AccountCircle');","import { useDispatch, useSelector } from 'react-redux';\nimport { logIn } from '../../store/auth/authOperations';\nimport css from './LoginForm.module.css';\nimport { Button, TextField } from '@mui/material';\nimport { AccountCircle } from '@mui/icons-material';\nimport { getAuthError } from '../../store/auth/authSelectors';\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const error = useSelector(getAuthError);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    dispatch(\n      logIn({\n        email: form.elements.email.value,\n        password: form.elements.password.value,\n      })\n    );\n    form.reset();\n  };\n\n  /* useEffect(() => {\n    if (error) {\n      Notify.failure('Login failed.');\n    }\n  }, [error]); */\n\n  return (\n    <div className={css['login-container']}>\n      <AccountCircle sx={{ fontSize: '150px' }} />\n      <form className={css.form} onSubmit={handleSubmit} autoComplete=\"off\">\n        <TextField\n          label=\"Email\"\n          variant=\"standard\"\n          type=\"email\"\n          name=\"email\" />\n        <TextField\n          label=\"Password\"\n          variant=\"standard\"\n          type=\"password\"\n          name=\"password\" />\n\n        {error ? <span className={css.error}>Login failed!</span> : null}\n\n        <Button type=\"submit\" variant=\"outlined\">Log In</Button>\n      </form>\n    </div>\n  );\n};\n","import { Helmet, HelmetProvider } from 'react-helmet-async';\nimport { LoginForm } from 'components/LoginForm/LoginForm';\n\nconst LoginPage = () => {\n  return (\n    <HelmetProvider>\n      <Helmet>\n        <title>Login</title>\n      </Helmet>\n      <div className=\"form-container\">\n        <LoginForm />\n      </div>\n    </HelmetProvider>\n  );\n};\n\nexport default LoginPage;\n"],"names":["createSvgIcon","_jsx","d","LoginForm","dispatch","useDispatch","error","useSelector","getAuthError","_jsxs","className","css","children","AccountCircle","sx","fontSize","onSubmit","e","preventDefault","form","currentTarget","logIn","email","elements","value","password","reset","autoComplete","TextField","label","variant","type","name","Button","HelmetProvider","Helmet"],"sourceRoot":""}